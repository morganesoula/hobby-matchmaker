[versions]
activityCompose = "1.10.1"
appcompat = "1.7.0"
coil = "3.1.0"
composeMultiplatform = "1.8.0-alpha03"
coreKtx = "1.16.0"
credentials = "1.5.0"
datastore = "1.1.4"
datetime = "0.6.1"
decompose = "3.3.0"
detekt = "1.23.7"
facebookAndroidSdk = "18.0.2"
firebaseKMP = "2.1.0"
googleIdentity = "1.1.1"
googleServices = "4.4.2"
gradle = "8.9.2"
koin = "4.0.2"
kotlinGradlePlugin = "2.1.10"
kotlinxCollectionsImmutable = "0.3.7"
kotlinxCoroutinesTest = "1.10.1"
kotlinxSerialization = "1.7.3"
kotlinxCoroutineKMP = "1.10.1"
ktor = "3.0.2"
napier = "2.6.1"
playServicesAuth = "21.3.0"
savedState = "1.2.1"
sqldelight = "2.0.1"
timber = "5.0.1"
youtube = "12.1.0"

[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
compose-gradle-plugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "composeMultiplatform" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
credentials = { module = "androidx.credentials:credentials", version.ref = "credentials" }
credentials-play-services = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentials" }
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
facebook-android-sdk = { module = "com.facebook.android:facebook-android-sdk", version.ref = "facebookAndroidSdk" }
facebook-login = { module = "com.facebook.android:facebook-login", version.ref = "facebookAndroidSdk" }
firebase-kmp-auth = { group = "dev.gitlive", name = "firebase-auth", version.ref = "firebaseKMP" }
firebase-kmp-firestore = { group = "dev.gitlive", name = "firebase-firestore", version.ref = "firebaseKMP" }
google-identity = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleIdentity" }
gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-coroutines-kmp = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutineKMP" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
napier = { group = "io.github.aakira", name = "napier", version.ref = "napier" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
saved-state-kmp = { module = "androidx.savedstate:savedstate-ktx", version.ref = "savedState" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
timber-android = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }
youtube-player = { module = "com.pierfrancescosoffritti.androidyoutubeplayer:core", version.ref = "youtube" }

[bundles]
ktor = ["ktor-client-core", "ktor-client-cio", "ktor-client-logging", "ktor-client-negotiation", "ktor-serialization-json"]

[plugins]
android-application = { id = "com.android.application", version.ref = "gradle" }
android-library = { id = "com.android.library", version.ref = "gradle" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinGradlePlugin" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinGradlePlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlinGradlePlugin" }

hobbymatchmaker-buildlogic-application = { id = "hobbymatchmaker.buildlogic.application", version = "unspecified" }
hobbymatchmaker-buildlogic-multiplatform = { id = "hobbymatchmaker.buildlogic.multiplatform", version = "unspecified" }
hobbymatchmaker-buildlogic-multiplatform-compose = { id = "hobbymatchmaker.buildlogic.multiplatformCompose", version = "unspecified" }
hobbymatchmaker-buildlogic-multiplatform-minimalist = { id = "hobbymatchmaker.buildlogic.multiplatformMinimalist", version = "unspecified" }
